// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Jim3Things/CloudChamber/pkg/protos/workload/external.proto

package workload

import (
	fmt "fmt"
	common "github.com/Jim3Things/CloudChamber/pkg/protos/common"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Define the policy for how to manage affinity groups
type ExternalAffinityType int32

const (
	// No placement restrictions, ignore affinity groups
	External_None ExternalAffinityType = 0
	// Require that all instances within one affinity group are placed in the same fault domain
	External_Strong_Affinity ExternalAffinityType = 1
	// Attempt to place all instances within one affinity group into the same fault domain
	External_Weak_Affinity ExternalAffinityType = 2
	// Require that no two instances with differing affinity groups are placed in the same fault domain.  There is
	// no guarantee that two instances with the same affinity group will be placed in the same fault domain
	External_Strong_AntiAffinity ExternalAffinityType = 3
	// Attempt to place instances with different affinity groups into different fault domains
	External_Weak_AntiAffinity ExternalAffinityType = 4
)

var ExternalAffinityType_name = map[int32]string{
	0: "None",
	1: "Strong_Affinity",
	2: "Weak_Affinity",
	3: "Strong_AntiAffinity",
	4: "Weak_AntiAffinity",
}

var ExternalAffinityType_value = map[string]int32{
	"None":                0,
	"Strong_Affinity":     1,
	"Weak_Affinity":       2,
	"Strong_AntiAffinity": 3,
	"Weak_AntiAffinity":   4,
}

func (x ExternalAffinityType) String() string {
	return proto.EnumName(ExternalAffinityType_name, int32(x))
}

func (ExternalAffinityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0, 0}
}

type ExternalVolumeAttr int32

const (
	ExternalVolume_Invalid ExternalVolumeAttr = 0
	// Volume can be dynamically created, implicitly writable
	ExternalVolume_Creatable ExternalVolumeAttr = 1
	// Volume exists, and is write locked
	ExternalVolume_Write_locked ExternalVolumeAttr = 2
	// Volume exists, and is writable
	ExternalVolume_Writable ExternalVolumeAttr = 3
)

var ExternalVolumeAttr_name = map[int32]string{
	0: "Invalid",
	1: "Creatable",
	2: "Write_locked",
	3: "Writable",
}

var ExternalVolumeAttr_value = map[string]int32{
	"Invalid":      0,
	"Creatable":    1,
	"Write_locked": 2,
	"Writable":     3,
}

func (x ExternalVolumeAttr) String() string {
	return proto.EnumName(ExternalVolumeAttr_name, int32(x))
}

func (ExternalVolumeAttr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0, 0, 0}
}

type External struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *External) Reset()         { *m = External{} }
func (m *External) String() string { return proto.CompactTextString(m) }
func (*External) ProtoMessage()    {}
func (*External) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0}
}

func (m *External) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_External.Unmarshal(m, b)
}
func (m *External) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_External.Marshal(b, m, deterministic)
}
func (m *External) XXX_Merge(src proto.Message) {
	xxx_messageInfo_External.Merge(m, src)
}
func (m *External) XXX_Size() int {
	return xxx_messageInfo_External.Size(m)
}
func (m *External) XXX_DiscardUnknown() {
	xxx_messageInfo_External.DiscardUnknown(m)
}

var xxx_messageInfo_External proto.InternalMessageInfo

// Define a disk volume
type ExternalVolume struct {
	// Volume size in gigabytes
	SizeInGb int64 `protobuf:"varint,1,opt,name=size_in_gb,json=sizeInGb,proto3" json:"size_in_gb,omitempty"`
	// Constraint on the volume type.
	Attribute ExternalVolumeAttr `protobuf:"varint,2,opt,name=attribute,proto3,enum=workload.ExternalVolumeAttr" json:"attribute,omitempty"`
	// Address where the volume is located
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalVolume) Reset()         { *m = ExternalVolume{} }
func (m *ExternalVolume) String() string { return proto.CompactTextString(m) }
func (*ExternalVolume) ProtoMessage()    {}
func (*ExternalVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0, 0}
}

func (m *ExternalVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalVolume.Unmarshal(m, b)
}
func (m *ExternalVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalVolume.Marshal(b, m, deterministic)
}
func (m *ExternalVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalVolume.Merge(m, src)
}
func (m *ExternalVolume) XXX_Size() int {
	return xxx_messageInfo_ExternalVolume.Size(m)
}
func (m *ExternalVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalVolume.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalVolume proto.InternalMessageInfo

func (m *ExternalVolume) GetSizeInGb() int64 {
	if m != nil {
		return m.SizeInGb
	}
	return 0
}

func (m *ExternalVolume) GetAttribute() ExternalVolumeAttr {
	if m != nil {
		return m.Attribute
	}
	return ExternalVolume_Invalid
}

func (m *ExternalVolume) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

// Define a single instance
type ExternalInstance struct {
	// Define the logical affinity group where this instance belongs.
	AffinityGroup int64 `protobuf:"varint,1,opt,name=affinity_group,json=affinityGroup,proto3" json:"affinity_group,omitempty"`
	// Defined the required blade capacity used by this instance
	RequiredCapacity *common.InstanceRequirements `protobuf:"bytes,2,opt,name=required_capacity,json=requiredCapacity,proto3" json:"required_capacity,omitempty"`
	// Boot volume name
	SystemName string `protobuf:"bytes,3,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	// all volumes, must include the boot volume
	Volumes map[string]*ExternalVolume `protobuf:"bytes,4,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// configuration / metadata to pass to the instance
	Config               string   `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalInstance) Reset()         { *m = ExternalInstance{} }
func (m *ExternalInstance) String() string { return proto.CompactTextString(m) }
func (*ExternalInstance) ProtoMessage()    {}
func (*ExternalInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0, 1}
}

func (m *ExternalInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalInstance.Unmarshal(m, b)
}
func (m *ExternalInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalInstance.Marshal(b, m, deterministic)
}
func (m *ExternalInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalInstance.Merge(m, src)
}
func (m *ExternalInstance) XXX_Size() int {
	return xxx_messageInfo_ExternalInstance.Size(m)
}
func (m *ExternalInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalInstance.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalInstance proto.InternalMessageInfo

func (m *ExternalInstance) GetAffinityGroup() int64 {
	if m != nil {
		return m.AffinityGroup
	}
	return 0
}

func (m *ExternalInstance) GetRequiredCapacity() *common.InstanceRequirements {
	if m != nil {
		return m.RequiredCapacity
	}
	return nil
}

func (m *ExternalInstance) GetSystemName() string {
	if m != nil {
		return m.SystemName
	}
	return ""
}

func (m *ExternalInstance) GetVolumes() map[string]*ExternalVolume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *ExternalInstance) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

// Define a workload.  This is a logical service made up of one or more instances
type ExternalWorkload struct {
	// Specify the workload's name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Specify the affinity policy to apply to the instances
	Affinity ExternalAffinityType `protobuf:"varint,2,opt,name=affinity,proto3,enum=workload.ExternalAffinityType" json:"affinity,omitempty"`
	// Define the set of instances in this workload.  Each instance has a name that is unique within
	// the workload.  That name is used as the key in the instance map.
	Instances            map[string]*ExternalInstance `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ExternalWorkload) Reset()         { *m = ExternalWorkload{} }
func (m *ExternalWorkload) String() string { return proto.CompactTextString(m) }
func (*ExternalWorkload) ProtoMessage()    {}
func (*ExternalWorkload) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7c0121214ba8022, []int{0, 2}
}

func (m *ExternalWorkload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalWorkload.Unmarshal(m, b)
}
func (m *ExternalWorkload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalWorkload.Marshal(b, m, deterministic)
}
func (m *ExternalWorkload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalWorkload.Merge(m, src)
}
func (m *ExternalWorkload) XXX_Size() int {
	return xxx_messageInfo_ExternalWorkload.Size(m)
}
func (m *ExternalWorkload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalWorkload.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalWorkload proto.InternalMessageInfo

func (m *ExternalWorkload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExternalWorkload) GetAffinity() ExternalAffinityType {
	if m != nil {
		return m.Affinity
	}
	return External_None
}

func (m *ExternalWorkload) GetInstances() map[string]*ExternalInstance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func init() {
	proto.RegisterEnum("workload.ExternalAffinityType", ExternalAffinityType_name, ExternalAffinityType_value)
	proto.RegisterEnum("workload.ExternalVolumeAttr", ExternalVolumeAttr_name, ExternalVolumeAttr_value)
	proto.RegisterType((*External)(nil), "workload.external")
	proto.RegisterType((*ExternalVolume)(nil), "workload.external.volume")
	proto.RegisterType((*ExternalInstance)(nil), "workload.external.instance")
	proto.RegisterMapType((map[string]*ExternalVolume)(nil), "workload.external.instance.VolumesEntry")
	proto.RegisterType((*ExternalWorkload)(nil), "workload.external.workload")
	proto.RegisterMapType((map[string]*ExternalInstance)(nil), "workload.external.workload.InstancesEntry")
}

func init() {
	proto.RegisterFile("github.com/Jim3Things/CloudChamber/pkg/protos/workload/external.proto", fileDescriptor_d7c0121214ba8022)
}

var fileDescriptor_d7c0121214ba8022 = []byte{
	// 635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xed, 0xb4, 0x71, 0x26, 0x4d, 0x71, 0xb7, 0x02, 0x52, 0x57, 0xa0, 0x28, 0x12, 0x52,
	0x84, 0x54, 0x5b, 0xb4, 0x12, 0xaa, 0xb8, 0x35, 0x51, 0x5b, 0xb5, 0x42, 0x3d, 0x98, 0x8f, 0x0a,
	0x2e, 0xd6, 0xda, 0xd9, 0xba, 0xab, 0xd8, 0xbb, 0xe9, 0x7a, 0x1d, 0x6a, 0x8e, 0xfc, 0x0c, 0x0e,
	0xfc, 0x2c, 0x8e, 0x9c, 0xf8, 0x15, 0x3d, 0x21, 0xdb, 0xd9, 0x34, 0x29, 0x01, 0x09, 0x6e, 0xeb,
	0x37, 0x6f, 0xde, 0xec, 0x7b, 0x3b, 0x32, 0x1c, 0x45, 0x54, 0x5e, 0x65, 0x81, 0x13, 0xf2, 0xc4,
	0x3d, 0xa3, 0xc9, 0xfe, 0xdb, 0x2b, 0xca, 0xa2, 0xd4, 0x1d, 0xc4, 0x3c, 0x1b, 0x0e, 0xae, 0x70,
	0x12, 0x10, 0xe1, 0x8e, 0x47, 0x91, 0x3b, 0x16, 0x5c, 0xf2, 0xd4, 0xfd, 0xc4, 0xc5, 0x28, 0xe6,
	0x78, 0xe8, 0x92, 0x1b, 0x49, 0x04, 0xc3, 0xb1, 0x53, 0x16, 0x90, 0xa9, 0x0a, 0xf6, 0xe1, 0x9c,
	0x20, 0x61, 0x13, 0x9e, 0x8f, 0x05, 0xbf, 0xc9, 0xab, 0xfe, 0x70, 0x37, 0x22, 0x6c, 0x77, 0x82,
	0x63, 0x3a, 0xc4, 0x92, 0xb8, 0xbf, 0x1d, 0x2a, 0x31, 0x7b, 0xf0, 0x6f, 0x77, 0x0a, 0x79, 0x92,
	0x70, 0xe6, 0x86, 0x78, 0x8c, 0x43, 0x2a, 0xf3, 0x4a, 0xa4, 0xfb, 0xa3, 0x0e, 0xa6, 0xba, 0xa4,
	0xfd, 0x5d, 0x83, 0xb5, 0x09, 0x8f, 0xb3, 0x84, 0xa0, 0x67, 0x00, 0x29, 0xfd, 0x4c, 0x7c, 0xca,
	0xfc, 0x28, 0x68, 0x6b, 0x1d, 0xad, 0x67, 0xf4, 0xeb, 0xb7, 0xfd, 0x5a, 0x57, 0xef, 0xac, 0x78,
	0x66, 0x51, 0x3a, 0x65, 0x27, 0x01, 0x3a, 0x86, 0x06, 0x96, 0x52, 0xd0, 0x20, 0x93, 0xa4, 0xad,
	0x77, 0xb4, 0xde, 0xc6, 0xde, 0x53, 0x47, 0x99, 0x74, 0x66, 0xee, 0x2b, 0x51, 0xa7, 0xa0, 0xf6,
	0xcd, 0xdb, 0xfe, 0xea, 0x17, 0x4d, 0xb7, 0x34, 0xef, 0xae, 0x15, 0x6d, 0x83, 0x91, 0x09, 0xda,
	0x36, 0x3a, 0x5a, 0xaf, 0x51, 0xce, 0x11, 0x05, 0xa1, 0xc0, 0xba, 0x7d, 0xa8, 0x15, 0x3c, 0xd4,
	0x84, 0xfa, 0x29, 0x2b, 0x23, 0xb0, 0x56, 0x50, 0x0b, 0x1a, 0x03, 0x41, 0xb0, 0xc4, 0x41, 0x4c,
	0x2c, 0x0d, 0x59, 0xb0, 0x7e, 0x21, 0xa8, 0x24, 0x7e, 0xcc, 0xc3, 0x11, 0x19, 0x5a, 0x3a, 0x5a,
	0x07, 0xb3, 0x40, 0xca, 0xba, 0x61, 0xff, 0xd4, 0xc1, 0xa4, 0x2c, 0x95, 0x98, 0x85, 0x85, 0xb5,
	0x0d, 0x7c, 0x79, 0x49, 0x19, 0x95, 0xb9, 0x1f, 0x09, 0x9e, 0x8d, 0x2b, 0x7b, 0x5e, 0x4b, 0xa1,
	0x27, 0x05, 0x88, 0xce, 0x60, 0x53, 0x90, 0xeb, 0x8c, 0x0a, 0x32, 0xf4, 0x55, 0x68, 0xa5, 0xc5,
	0xe6, 0xde, 0x13, 0xa7, 0x0a, 0xd3, 0x51, 0x9a, 0xfe, 0x94, 0x99, 0x10, 0x26, 0x53, 0xcf, 0x52,
	0x7d, 0x83, 0x69, 0x1b, 0xea, 0x41, 0x33, 0xcd, 0x53, 0x49, 0x12, 0x9f, 0xe1, 0x84, 0xdc, 0xb7,
	0x09, 0x55, 0xed, 0x1c, 0x27, 0x04, 0xbd, 0x86, 0x7a, 0x15, 0x56, 0xda, 0xae, 0x75, 0x8c, 0x5e,
	0x73, 0xaf, 0xb7, 0x24, 0x4e, 0x35, 0xd6, 0x79, 0x5f, 0x51, 0x8f, 0x98, 0x14, 0x79, 0x19, 0xec,
	0x57, 0x4d, 0x37, 0x35, 0x4f, 0x49, 0xa0, 0x47, 0xb0, 0x16, 0x72, 0x76, 0x49, 0xa3, 0xf6, 0x6a,
	0x31, 0xd2, 0x9b, 0x7e, 0xd9, 0xef, 0x60, 0x7d, 0xbe, 0x15, 0x59, 0x60, 0x8c, 0x48, 0x5e, 0xe6,
	0xd0, 0xf0, 0x8a, 0x23, 0x72, 0x61, 0x75, 0x82, 0xe3, 0x8c, 0x4c, 0x1d, 0x6f, 0xff, 0xf1, 0x51,
	0xbd, 0x8a, 0xf7, 0x4a, 0x3f, 0xd0, 0xec, 0x6f, 0x3a, 0xcc, 0x36, 0x1c, 0xed, 0x40, 0xad, 0x34,
	0xab, 0x2d, 0x9a, 0x2d, 0x41, 0x74, 0x0c, 0xa6, 0x4a, 0x7b, 0xba, 0x36, 0x9d, 0x25, 0x13, 0x66,
	0xcf, 0x24, 0xf3, 0x31, 0x99, 0x5b, 0x9c, 0x59, 0x2f, 0xf2, 0xa0, 0xa1, 0xc2, 0x48, 0xdb, 0x46,
	0x19, 0xd8, 0xf3, 0x25, 0x42, 0x33, 0xe4, 0x54, 0x91, 0xef, 0x47, 0x76, 0x27, 0x63, 0x7f, 0x80,
	0x8d, 0x45, 0xda, 0x92, 0x78, 0x5e, 0x2c, 0xc6, 0xb3, 0xf3, 0x97, 0x47, 0x9a, 0x0b, 0xa8, 0x7b,
	0x0d, 0xad, 0x05, 0x4f, 0xc8, 0x84, 0xda, 0x39, 0x67, 0xc4, 0x5a, 0x41, 0x5b, 0xf0, 0xe0, 0x8d,
	0x14, 0x9c, 0x45, 0xfe, 0xe1, 0x94, 0x61, 0x69, 0x68, 0x13, 0x5a, 0x17, 0x04, 0x8f, 0xee, 0x20,
	0x1d, 0x3d, 0x86, 0x2d, 0xc5, 0x63, 0x92, 0xce, 0x0a, 0x06, 0x7a, 0x08, 0x9b, 0x15, 0x77, 0x1e,
	0xae, 0xf5, 0x0f, 0x3e, 0xbe, 0xfc, 0xbf, 0x7f, 0x57, 0xb0, 0x56, 0x02, 0xfb, 0xbf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x40, 0x6c, 0x94, 0xdf, 0xfc, 0x04, 0x00, 0x00,
}
