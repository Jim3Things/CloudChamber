// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Jim3Things/CloudChamber/pkg/protos/common/capacity.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines the capacity dimensions and values for a blade
type BladeCapacity struct {
	Cores                float32                  `protobuf:"fixed32,1,opt,name=cores,proto3" json:"cores,omitempty"`
	MemoryInMb           int64                    `protobuf:"varint,2,opt,name=memory_in_mb,json=memoryInMb,proto3" json:"memory_in_mb,omitempty"`
	DiskInGb             int64                    `protobuf:"varint,3,opt,name=disk_in_gb,json=diskInGb,proto3" json:"disk_in_gb,omitempty"`
	NetworkBandwidth     int64                    `protobuf:"varint,4,opt,name=network_bandwidth,json=networkBandwidth,proto3" json:"network_bandwidth,omitempty"`
	Arch                 string                   `protobuf:"bytes,5,opt,name=arch,proto3" json:"arch,omitempty"`
	Gpus                 *BladeCapacityGpuDetails `protobuf:"bytes,6,opt,name=gpus,proto3" json:"gpus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BladeCapacity) Reset()         { *m = BladeCapacity{} }
func (m *BladeCapacity) String() string { return proto.CompactTextString(m) }
func (*BladeCapacity) ProtoMessage()    {}
func (*BladeCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_426fce80509e2de4, []int{0}
}

func (m *BladeCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BladeCapacity.Unmarshal(m, b)
}
func (m *BladeCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BladeCapacity.Marshal(b, m, deterministic)
}
func (m *BladeCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BladeCapacity.Merge(m, src)
}
func (m *BladeCapacity) XXX_Size() int {
	return xxx_messageInfo_BladeCapacity.Size(m)
}
func (m *BladeCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_BladeCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_BladeCapacity proto.InternalMessageInfo

func (m *BladeCapacity) GetCores() float32 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *BladeCapacity) GetMemoryInMb() int64 {
	if m != nil {
		return m.MemoryInMb
	}
	return 0
}

func (m *BladeCapacity) GetDiskInGb() int64 {
	if m != nil {
		return m.DiskInGb
	}
	return 0
}

func (m *BladeCapacity) GetNetworkBandwidth() int64 {
	if m != nil {
		return m.NetworkBandwidth
	}
	return 0
}

func (m *BladeCapacity) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *BladeCapacity) GetGpus() *BladeCapacityGpuDetails {
	if m != nil {
		return m.Gpus
	}
	return nil
}

// GPUs may not be present at all on a blade, so if they are
// not then the 'present' flag is false and the other fields are
// ignored.
type BladeCapacityGpuDetails struct {
	Units                int32    `protobuf:"varint,1,opt,name=units,proto3" json:"units,omitempty"`
	Arch                 string   `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	Present              bool     `protobuf:"varint,3,opt,name=present,proto3" json:"present,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BladeCapacityGpuDetails) Reset()         { *m = BladeCapacityGpuDetails{} }
func (m *BladeCapacityGpuDetails) String() string { return proto.CompactTextString(m) }
func (*BladeCapacityGpuDetails) ProtoMessage()    {}
func (*BladeCapacityGpuDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_426fce80509e2de4, []int{0, 0}
}

func (m *BladeCapacityGpuDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BladeCapacityGpuDetails.Unmarshal(m, b)
}
func (m *BladeCapacityGpuDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BladeCapacityGpuDetails.Marshal(b, m, deterministic)
}
func (m *BladeCapacityGpuDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BladeCapacityGpuDetails.Merge(m, src)
}
func (m *BladeCapacityGpuDetails) XXX_Size() int {
	return xxx_messageInfo_BladeCapacityGpuDetails.Size(m)
}
func (m *BladeCapacityGpuDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_BladeCapacityGpuDetails.DiscardUnknown(m)
}

var xxx_messageInfo_BladeCapacityGpuDetails proto.InternalMessageInfo

func (m *BladeCapacityGpuDetails) GetUnits() int32 {
	if m != nil {
		return m.Units
	}
	return 0
}

func (m *BladeCapacityGpuDetails) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *BladeCapacityGpuDetails) GetPresent() bool {
	if m != nil {
		return m.Present
	}
	return false
}

func init() {
	proto.RegisterType((*BladeCapacity)(nil), "common.blade_capacity")
	proto.RegisterType((*BladeCapacityGpuDetails)(nil), "common.blade_capacity.gpu_details")
}

func init() {
	proto.RegisterFile("github.com/Jim3Things/CloudChamber/pkg/protos/common/capacity.proto", fileDescriptor_426fce80509e2de4)
}

var fileDescriptor_426fce80509e2de4 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x69, 0xf7, 0xc3, 0xf9, 0x9d, 0x88, 0x06, 0x0f, 0x41, 0x3c, 0x94, 0x9d, 0x0a, 0x42,
	0x0b, 0x4e, 0xf6, 0x07, 0x6c, 0x07, 0x99, 0xe0, 0xc1, 0xe2, 0xc9, 0x4b, 0x49, 0xda, 0x90, 0x86,
	0x2d, 0x3f, 0x48, 0x52, 0xc6, 0xfe, 0x2d, 0xff, 0x42, 0x59, 0x62, 0x65, 0x5e, 0xbd, 0xe5, 0x7d,
	0xde, 0x83, 0x97, 0xc7, 0x17, 0x36, 0x5c, 0xf8, 0xae, 0xa7, 0x45, 0xa3, 0x65, 0xf9, 0x2a, 0xe4,
	0xf2, 0xa3, 0x13, 0x8a, 0xbb, 0x72, 0xb3, 0xd7, 0x7d, 0xbb, 0xe9, 0x88, 0xa4, 0xcc, 0x96, 0x66,
	0xc7, 0x4b, 0x63, 0xb5, 0xd7, 0xae, 0x6c, 0xb4, 0x94, 0x5a, 0x95, 0x0d, 0x31, 0xa4, 0x11, 0xfe,
	0x58, 0x04, 0x8c, 0xa6, 0x11, 0x2f, 0xbe, 0x52, 0xb8, 0xa6, 0x7b, 0xd2, 0xb2, 0x7a, 0x08, 0xa0,
	0x3b, 0x98, 0x34, 0xda, 0x32, 0x87, 0x93, 0x2c, 0xc9, 0xd3, 0x2a, 0x0a, 0x94, 0xc1, 0x95, 0x64,
	0x52, 0xdb, 0x63, 0x2d, 0x54, 0x2d, 0x29, 0x4e, 0xb3, 0x24, 0x1f, 0x55, 0x10, 0xd9, 0x56, 0xbd,
	0x51, 0xf4, 0x00, 0xd0, 0x0a, 0xb7, 0x3b, 0xf9, 0x9c, 0xe2, 0x51, 0xf0, 0x67, 0x27, 0xb2, 0x55,
	0x2f, 0x14, 0x3d, 0xc2, 0xad, 0x62, 0xfe, 0xa0, 0xed, 0xae, 0xa6, 0x44, 0xb5, 0x07, 0xd1, 0xfa,
	0x0e, 0x8f, 0x43, 0xe8, 0xe6, 0xc7, 0x58, 0x0f, 0x1c, 0x21, 0x18, 0x13, 0xdb, 0x74, 0x78, 0x92,
	0x25, 0xf9, 0x65, 0x15, 0xde, 0x68, 0x05, 0x63, 0x6e, 0x7a, 0x87, 0xa7, 0x59, 0x92, 0xcf, 0x9f,
	0x16, 0x45, 0x1c, 0x50, 0xfc, 0xfd, 0x7c, 0xc1, 0x4d, 0x5f, 0xb7, 0xcc, 0x13, 0xb1, 0x77, 0x55,
	0xc8, 0xdf, 0xbf, 0xc3, 0xfc, 0x0c, 0x9e, 0xd6, 0xf5, 0x4a, 0xf8, 0xb8, 0x6e, 0x52, 0x45, 0xf1,
	0x5b, 0x98, 0x9e, 0x15, 0x62, 0xb8, 0x30, 0x96, 0x39, 0xa6, 0x7c, 0x18, 0x33, 0xab, 0x06, 0xb9,
	0x5e, 0x7d, 0x3e, 0xff, 0xe7, 0x06, 0x74, 0x1a, 0xe4, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xc4,
	0x6b, 0x5d, 0x45, 0xc2, 0x01, 0x00, 0x00,
}
